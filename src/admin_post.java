
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.Toolkit;
import javax.swing.JCheckBox;


/**
 *
 * @author Stanle
 */
import java.sql.*;
import java.text.DateFormat;
import java.util.Date;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

public class admin_post extends javax.swing.JFrame {

    
    Connection con;
    Statement st;
    ResultSet rs;
    PreparedStatement pst;
    int staffcount;
    String id[];
    JCheckBox []staffs = new JCheckBox[100];
    
    public admin_post() {
        
        initComponents();
        
        dbconnection db=new dbconnection();
        con=db.connect();  
        id=new String[100];
        staffcount = 0;
        
        displayAll();
        
    }
     public void locat()
    {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width - w) / 2;
        int y = (dim.height - h) / 2;
        this.setLocation(x, y);
    }
    private void displayAll()
    {
        
        try
        {
            String qry = "SELECT Staff_Id, Name FROM staff_info";
            int i = 0;
            int X = 100;
            int Y = 100;
            pst = con.prepareStatement(qry);
            rs = pst.executeQuery();
            while(rs.next())
            {
                String getID= rs.getString("Staff_Id");
                id[i] = getID;
                staffs[i] = new JCheckBox();
                staffs[i].setText(rs.getString("Staff_Id") + "    " + rs.getString("Name"));
                staffs[i].setBounds(X, Y, 150, 30);
                cmbStaff_id.addItem(getID);
                Y = Y + 30;
                Rectangle rc = this.getBounds();
                int sx = rc.height;
               
                 this.add(staffs[i]);
                 // initComponents();
                  if(Y >= sx - 50)
                  {
                      X = X + 70;
                      Y = 200;
                  }
                   i++;
                   
            }
           staffcount = i;
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnSelectMember = new javax.swing.JButton();
        btnSend = new javax.swing.JButton();
        testlab = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        title_msg = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        messagetable = new javax.swing.JTable();
        cmb_msgType = new javax.swing.JComboBox<>();
        btnSelectStaffID = new javax.swing.JButton();
        testlab1 = new javax.swing.JLabel();
        testlab2 = new javax.swing.JLabel();
        cmbStaff_id = new javax.swing.JComboBox<>();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        details_msg = new javax.swing.JTextArea();

        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Vijaya", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setText("Staff Leave Management");

        jLabel2.setFont(new java.awt.Font("Vijaya", 1, 18)); // NOI18N
        jLabel2.setText("Select Staff Member(s)");

        btnSelectMember.setFont(new java.awt.Font("Vijaya", 1, 18)); // NOI18N
        btnSelectMember.setText("Select All");
        btnSelectMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectMemberActionPerformed(evt);
            }
        });

        btnSend.setFont(new java.awt.Font("Vijaya", 1, 18)); // NOI18N
        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        testlab.setFont(new java.awt.Font("Vijaya", 1, 18)); // NOI18N
        testlab.setText("Enter Title:");

        btnClear.setFont(new java.awt.Font("Vijaya", 1, 18)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        messagetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        messagetable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                messagetableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(messagetable);

        cmb_msgType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Urgent", "Normal" }));

        btnSelectStaffID.setFont(new java.awt.Font("Vijaya", 1, 18)); // NOI18N
        btnSelectStaffID.setText("Search");
        btnSelectStaffID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectStaffIDActionPerformed(evt);
            }
        });

        testlab1.setFont(new java.awt.Font("Vijaya", 1, 18)); // NOI18N
        testlab1.setText("Type:");

        testlab2.setFont(new java.awt.Font("Vijaya", 1, 18)); // NOI18N
        testlab2.setText("Message Details:");

        btnUpdate.setFont(new java.awt.Font("Vijaya", 1, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Vijaya", 1, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        details_msg.setColumns(20);
        details_msg.setRows(5);
        jScrollPane2.setViewportView(details_msg);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSelectMember)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(136, 136, 136)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(testlab)
                                    .addComponent(testlab1)
                                    .addComponent(testlab2)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cmb_msgType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(title_msg)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(cmbStaff_id, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSelectStaffID))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 34, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnSelectMember)
                    .addComponent(btnSelectStaffID)
                    .addComponent(cmbStaff_id, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(testlab, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(title_msg, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(testlab1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmb_msgType, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(testlab2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2)
                        .addGap(18, 18, 18)
                        .addComponent(btnSend)
                        .addGap(19, 19, 19)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDelete)
                            .addComponent(btnClear))))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectMemberActionPerformed
        // TODO add your handling code here:
        for(int i = 0; i< staffcount; i++)
        {
            if(!(staffs[i].isSelected()))
            {
                 staffs[i].setSelected(true);
            }
            else
            {
                 staffs[i].setSelected(false);
            }
           
        }
    }//GEN-LAST:event_btnSelectMemberActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        String []ids = new String[100];
        
        int k = 0;
        
        for(int i = 0; i < staffcount; i++)
        {
            if(staffs[i].isSelected())
            {
                ids[k] = id[i];
                k++;
            }
        }
        
        if(!(title_msg.getText().equals("")) && !(details_msg.getText().equals("")) && k >= 1)
        {
            int count = 0;
            
            for(int i = 0; i < k; i++)
            {
               try
               {
                  DateFormat df = new SimpleDateFormat();
                  Date today = new Date();
                  String stoday = df.format(today);

                  String qry = "INSERT INTO message_tbl ( Title, Type, Details, Date, StaffId) VALUES (?, ?, ?, ?, ?)";
                   pst = con.prepareStatement(qry);
                   pst.setString(1, title_msg.getText());
                   pst.setString(2, cmb_msgType.getSelectedItem().toString());
                   pst.setString(3, details_msg.getText());
                   pst.setString(4, stoday);
                   pst.setString(5, ids[i]);
                   pst.execute();
                   
                   count++;
               }
               catch(Exception e)
               {
                   JOptionPane.showMessageDialog(null, e);
               }
            }
            if(count >0){
                JOptionPane.showMessageDialog(null, "Message Send...");
                clear();
            }
   
        }
        else
        {
           JOptionPane.showMessageDialog(null, "Pls Enter Message And Select Staff");
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
      
        clear();
     
    }//GEN-LAST:event_btnClearActionPerformed

    public void clear(){
        title_msg.setText("");
        details_msg.setText("");
         btnSend.setEnabled(true);
        cmb_msgType.setSelectedItem("Urgent");
    }
    
    private void messagetableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_messagetableMouseClicked
        
        int row = messagetable.getSelectedRow();
        String id = (messagetable.getModel().getValueAt(row, 0).toString());
        
        try
        {
            String qry = "SELECT * FROM message_tbl WHERE Message_ID = '" + id + "'";

            pst = con.prepareStatement(qry);
            rs = pst.executeQuery();
            if(rs.next())
            {
                title_msg.setText(rs.getString("Title"));
                details_msg.setText(rs.getString("Details"));
                cmb_msgType.setSelectedItem(rs.getString("Type"));

                btnSend.setEnabled(false);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
        
    }//GEN-LAST:event_messagetableMouseClicked
    
    public void fetchFromDB(){
        
        String qry = "SELECT message_tbl.Message_ID, message_tbl.StaffId AS `Stafff ID`, staff_info.Name, message_tbl.Title, message_tbl.Type, message_tbl.Details, \n " +
            " message_tbl.Date FROM message_tbl INNER JOIN staff_info ON message_tbl.StaffId = staff_info.Staff_Id\n " +
            " WHERE message_tbl.StaffId = '" + cmbStaff_id.getSelectedItem().toString() + "'";
                
        try
        {
          pst = con.prepareStatement(qry); 
          rs = pst.executeQuery(qry);
          messagetable.setModel(DbUtils.resultSetToTableModel(rs));
          
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private void btnSelectStaffIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectStaffIDActionPerformed
        try
        {
          fetchFromDB();
          
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnSelectStaffIDActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        
        if(!(title_msg.getText().equals("")) && !(details_msg.getText().equals("")))
        {  
            int row = messagetable.getSelectedRow();
            String id = (messagetable.getModel().getValueAt(row,0).toString());
            try
            {
                DateFormat df = new SimpleDateFormat();
                Date today = new Date();
                String stoday = df.format(today);
                
                String qry=" UPDATE message_tbl SET Title = ?, Type = ?, Details = ?, Date = ? WHERE Message_ID = '" + id + "'";
                pst=con.prepareStatement(qry);

                pst.setString(1, title_msg.getText());
                pst.setString(2, cmb_msgType.getSelectedItem().toString());
                pst.setString(3, details_msg.getText());
                pst.setString(4, stoday);
                
                pst.execute();
                JOptionPane.showMessageDialog(null, "Data Updated... ");
                clear();
                fetchFromDB();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        int row = messagetable.getSelectedRow();
        
        if(row == -1)
        {
            JOptionPane.showMessageDialog(null, "Please select a Message");
        }
        else
        {
            
            String id = (messagetable.getModel().getValueAt(row, 0).toString());
            String qry = "DELETE FROM message_tbl WHERE Message_ID = '" + id + "' ";
            try
            {

                pst=con.prepareStatement(qry);
                pst.execute();
                JOptionPane.showMessageDialog(null, "Deleted Success");

                clear();
                fetchFromDB();


            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        locat();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin_post.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin_post.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin_post.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin_post.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admin_post().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSelectMember;
    private javax.swing.JButton btnSelectStaffID;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbStaff_id;
    private javax.swing.JComboBox<String> cmb_msgType;
    private javax.swing.JTextArea details_msg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable messagetable;
    private javax.swing.JLabel testlab;
    private javax.swing.JLabel testlab1;
    private javax.swing.JLabel testlab2;
    private javax.swing.JTextField title_msg;
    // End of variables declaration//GEN-END:variables
}
